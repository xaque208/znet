syntax = "proto3";

package rpc;

option go_package = ".;rpc";

import "google/protobuf/timestamp.proto";

message SearchRequest {
  string name = 1;
  string domain = 2;
  string kernel = 3;
  string platform = 4;
  string role = 5;
  string host_group = 6;
  string type = 7;
  string mac_address = 8;
  string ipv4_address = 9;
  string ipv6_address = 10;
}

message SearchResponse {
  repeated NetworkHost hosts = 1;
  repeated NetworkID network_ids = 2;
  repeated ZigbeeDevice zigbee_devices = 3;
}

message IOTDevice {
  string name = 1;
  DeviceDiscovery device_discovery = 2;
  NetworkID network_id = 3;
}

// NetworkHost is the information about any host that is attached to the
// network.
message NetworkHost {
  string role = 1;
  string group = 2;
  string name = 3;
  string operating_system = 4;
  string platform = 5;
  string type = 6;
  string domain = 7;
  string description = 8;
  bool watch = 9;
  repeated string inet_address = 10;
  repeated string inet6_address = 11;
  repeated string mac_address = 12;
  google.protobuf.Timestamp last_seen = 13;
  string dn = 14;
}

message NetworkID {
  string name = 1;
  repeated string mac_address = 2;
  repeated string ip_address = 3;
  repeated string reporting_source = 4;
  repeated string reporting_source_interface = 5;
  google.protobuf.Timestamp last_seen = 6;
  string dn = 7;
}

message L3Network {
  string name = 1;
  string soa = 2;
  string domain = 3;
  repeated string ntp_servers = 4;
  repeated InetNetwork inet_network = 5;
  repeated Inet6Network inet6_network = 6;
  string dn = 7;
  string description = 8;
}

message InetNetwork {
  string name = 1;

  string prefix = 2;
  string gateway = 3;
  string dynamic_range = 4;
  string dn = 5;
}

message Inet6Network {
  string name = 1;

  string prefix = 2;
  string gateway = 3;
  string dn = 4;
}

// <discovery_prefix>/<component>/[<node_id>/]<object_id>/config
message DeviceDiscovery {
  string discovery_prefix = 1;
  string component = 2;
  string node_id = 3;
  string object_id = 4;
  repeated string endpoint = 5;
  bytes message = 6;
}

message MACObservation {
  string mac = 1;
  string ip = 2;
  string source_host = 3;
}

message Empty {}

message Light {
  string type = 1;
  int32 id = 2;
  string name = 3;
  State state = 4;
}

message LightGroup {
  string type = 1;
  int32 id = 2;
  string name = 3;
  State state = 4;
  repeated int32 lights = 5;
}

message State {
  bool on = 1;
  int32 brightness = 2;
}

message LightRequest {}

message LightResponse {
  repeated Light lights = 1;
  repeated LightGroup groups = 2;
}

message Event {
  string name = 1;
  bytes payload = 2;
}

message EventResponse {
  bool errors = 1;
  string message = 2;
}

message EventSub { repeated string name = 1; }

message ZigbeeDevice {
  string name = 1;
  string description = 2;
  string dn = 3;
  google.protobuf.Timestamp last_seen = 4;
  string iot_zone = 5;
  string type = 6;
  string software_build_id = 7;
  string date_code = 8;
  string model = 9;
  string vendor = 10;
  string manufacturer_name = 11;
  string power_source = 12;
  string model_id = 13;
}

message IOTZone {
  string name = 1;
  string description = 2;
  string dn = 3;
}

service Inventory {
  rpc Search(SearchRequest) returns (SearchResponse);

  rpc ListNetworkHosts(Empty) returns (SearchResponse);
  // rpc SearchNetworks(Empty) returns (Empty);
  // rpc SearchZones(Empty) returns (Empty);
}

service Telemetry {
  rpc ReportIOTDevice(IOTDevice) returns (Empty);
  rpc ReportNetworkID(NetworkID) returns (Empty);
}

service Lights {
  rpc Off(LightGroup) returns (LightResponse);
  rpc On(LightGroup) returns (LightResponse);
  rpc Status(LightRequest) returns (LightResponse);

  rpc Brightness(LightGroup) returns (LightResponse);
  rpc Alert(LightGroup) returns (LightResponse);
}

service Events {
  rpc NoticeEvent(Event) returns (EventResponse);
  rpc SubscribeEvents(EventSub) returns (stream Event);
}
